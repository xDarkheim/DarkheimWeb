/* ==========================================================================
   Forms
   ========================================================================== */
.form-group {
    margin-bottom: var(--spacing-3);
}

.form-label,
label { /* Style native label elements */
    display: block;
    font-weight: 500;
    color: var(--color-text); /* Use standard text color for labels */
    margin-bottom: var(--spacing-1);
    font-size: 0.9rem;
}

.form-control,
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="url"],
input[type="number"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime-local"],
textarea,
select {
    display: block;
    width: 100%;
    padding: var(--input-padding-y) var(--input-padding-x);
    font-family: var(--font-primary);
    font-size: var(--input-font-size);
    font-weight: var(--input-font-weight);
    line-height: var(--input-line-height);
    color: var(--input-color);
    background-color: var(--input-bg);
    background-clip: padding-box;
    border: 1px solid var(--input-border-color);
    border-radius: var(--input-border-radius);
    transition: border-color var(--transition-duration) var(--transition-timing-function),
                box-shadow var(--transition-duration) var(--transition-timing-function);
}

.form-control:focus,
input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="url"]:focus,
input[type="number"]:focus,
input[type="date"]:focus,
input[type="month"]:focus,
input[type="week"]:focus,
input[type="time"]:focus,
input[type="datetime-local"]:focus,
textarea:focus,
select:focus {
    color: var(--input-focus-color);
    background-color: var(--input-focus-bg);
    border-color: var(--input-focus-border-color);
    outline: 0;
    box-shadow: var(--shadow-outline);
}

textarea.form-control {
    min-height: calc(1.5em + (var(--spacing-2) * 2) + 2px); /* Default to roughly 1 row */
    resize: vertical;
}
textarea[rows] { /* If rows attribute is present, let it define height */
    min-height: unset;
}


select.form-control {
    appearance: none; /* Remove default arrow for custom styling */
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23c5c8c6' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right var(--spacing-2) center;
    background-size: 16px 12px;
    padding-right: calc(var(--spacing-2) * 2.5); /* Make space for arrow */
}
select.form-control:focus {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%237f5af0' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e"); /* Change arrow color on focus */
}


/* Checkboxes and Radios */
.form-checkbox-group,
.form-radio-group {
    display: flex;
    align-items: center;
    gap: var(--spacing-1);
}
input[type="checkbox"],
input[type="radio"] {
    width: 1.15em;
    height: 1.15em;
    margin-top: 0.1em; /* Align better with label text */
    vertical-align: top;
    background-color: var(--color-surface-accent);
    border: 1px solid var(--color-border-light);
    border-radius: var(--border-radius-sm);
    appearance: none; /* Remove default appearance */
    cursor: pointer;
    position: relative;
    transition: background-color var(--transition-duration) ease, border-color var(--transition-duration) ease;
}
input[type="radio"] {
    border-radius: 50%; /* Radios are round */
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
    background-color: var(--color-primary);
    border-color: var(--color-primary);
}

input[type="checkbox"]:checked::before {
    content: '';
    display: block;
    position: absolute;
    /* Adjust proportions and thickness for better visibility */
    width: 0.3em; /* Width of the short part of the checkmark */
    height: 0.6em; /* Height of the long part of the checkmark */
    border: solid var(--color-primary-contrast); /* Checkmark color (white) */
    border-width: 0 0.2em 0.2em 0; /* Line thickness: no top, right, bottom, no left */
    transform: rotate(45deg) translate(-50%, -50%);
    left: 50%;
    top: 42%; /* Slightly adjust vertical position for visual center */
}

input[type="radio"]:checked::before {
    content: '';
    display: block;
    width: 0.5em;
    height: 0.5em;
    background-color: var(--color-primary-contrast);
    border-radius: 50%;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

input[type="checkbox"]:focus,
input[type="radio"]:focus {
    outline: none;
    box-shadow: var(--shadow-outline);
}

.form-checkbox-group label,
.form-radio-group label {
    margin-bottom: 0; /* Reset margin for labels next to checkboxes/radios */
    font-weight: 400;
}

/* Input Groups (for icons with inputs) */
.input-group {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    align-items: stretch;
    width: 100%;
}
.input-group .form-control {
    position: relative;
    flex: 1 1 auto;
    width: 1%;
    min-width: 0;
}
.input-group .form-control:not(:first-child) { border-top-left-radius: 0; border-bottom-left-radius: 0; }
.input-group .form-control:not(:last-child) { border-top-right-radius: 0; border-bottom-right-radius: 0; }

.input-group-icon,
.input-group-text {
    display: flex;
    align-items: center;
    padding: var(--spacing-2) var(--spacing-2);
    font-size: 0.95rem;
    font-weight: 400;
    line-height: 1.5;
    color: var(--color-text-muted);
    text-align: center;
    white-space: nowrap;
    background-color: var(--color-surface); /* Slightly different from input bg */
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-sm);
}
.input-group-icon:first-child,
.input-group-text:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: 0; /* Avoid double border */
}
.input-group-icon:last-child,
.input-group-text:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-left: 0; /* Avoid double border */
}
.input-group .form-control:focus + .input-group-icon, /* Style icon when input is focused */
.input-group .form-control:focus + .input-group-text {
    border-color: var(--color-border-focus);
}


/* Form Validation States */
.form-control.is-invalid,
textarea.is-invalid,
select.is-invalid {
    border-color: var(--color-danger);
    padding-right: calc(1.5em + var(--spacing-2) * 1.5); /* Make space for icon */
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23f44336'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23f44336' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right var(--spacing-2) center;
    background-size: 1.5em 1.5em; /* Adjust icon size */
}
.form-control.is-invalid:focus,
textarea.is-invalid:focus,
select.is-invalid:focus {
    border-color: var(--color-danger);
    box-shadow: 0 0 0 0.25rem rgba(var(--color-danger-rgb), 0.25);
}
.error-text, .invalid-feedback { /* For text below invalid fields */
    display: block;
    width: 100%;
    margin-top: var(--spacing-1);
    font-size: 0.8rem;
    color: var(--color-danger);
}

.form-control.is-valid,
textarea.is-valid,
select.is-valid {
    border-color: var(--color-success);
    /* Optional: Add success icon */
}
.form-control.is-valid:focus,
textarea.is-valid:focus,
select.is-valid:focus {
    border-color: var(--color-success);
    box-shadow: 0 0 0 0.25rem rgba(var(--color-success-rgb), 0.25);
}
.valid-feedback {
    display: block;
    width: 100%;
    margin-top: var(--spacing-1);
    font-size: 0.8rem;
    color: var(--color-success);
}

/* Form Actions (for submit/cancel buttons) */
.form-actions {
    margin-top: var(--spacing-4);
    display: flex;
    gap: var(--spacing-2);
    flex-wrap: wrap; /* Allow buttons to wrap on small screens */
    justify-content: flex-start; /* Or flex-end, center */
}

/* Styled Form (a wrapper class for forms if needed for specific layout) */
.styled-form {
    background-color: var(--color-surface); /* Can be same as .main-content or slightly different */
    padding: var(--spacing-4);
}
.auth-form-container .styled-form { /* Example for login/register pages */
    max-width: 450px;
    margin: var(--spacing-4) auto;
}
